#include <stdio.h>

#define START_RAM 0x200
#define fopcode memory[pc] << 8 | memory[pc + 1] //Fetch OpCode

//Current opcode
static unsigned short opcode;

/* CPU */
typedef struct CPU
{
	//RAM Memory (4K memory) 
	unsigned char Memory[0x1000];

	//Registers V(0 to F)
	unsigned char V[0x0F];

	//Register I (Index)
	unsigned int I;

	//Program Counter
	unsigned int PC;

	//Stack Pointer
	unsigned char SP;

	struct Timers
	{
		unsigned char DelayTimer;
		unsigned char SoundTimer;
	}Timers;
} CPU;

/* CPU Functions */
void Initialization(CPU* cpu, FILE* rom);
void LoadROM(CPU* cpu, FILE* rom);
void LoadFontSets(CPU* cpu);
void Cycle(CPU* cpu);

/* Others */

//Sprites - Fonts(0 to F) - It must be load after jump to 0x200
const unsigned char sprites[80] = {
	0xF0, 0x90, 0x90, 0x90, 0xF0, // 0
	0x20, 0x60, 0x20, 0x20, 0x70, // 1
	0xF0, 0x10, 0xF0, 0x80, 0xF0, // 2
	0xF0, 0x10, 0xF0, 0x10, 0xF0, // 3
	0x90, 0x90, 0xF0, 0x10, 0x10, // 4
	0xF0, 0x80, 0xF0, 0x10, 0xF0, // 5
	0xF0, 0x80, 0xF0, 0x90, 0xF0, // 6
	0xF0, 0x10, 0x20, 0x40, 0x40, // 7
	0xF0, 0x90, 0xF0, 0x90, 0xF0, // 8
	0xF0, 0x90, 0xF0, 0x10, 0xF0, // 9
	0xF0, 0x90, 0xF0, 0x90, 0x90, // A
	0xE0, 0x90, 0xE0, 0x90, 0xE0, // B
	0xF0, 0x80, 0x80, 0x80, 0xF0, // C
	0xE0, 0x90, 0x90, 0x90, 0xE0, // D
	0xF0, 0x80, 0xF0, 0x80, 0xF0, // E
	0xF0, 0x80, 0xF0, 0x80, 0x80  // F
};